#!perl6

use Tomty;

sub MAIN (

  $thing?,
  Bool :$verbose    = False, 
  Bool :$all        = False,
  Bool :$a          = False,
  Bool :$show-failed  = False,
  Bool :$color        = False, 
  Bool :$noheader   = False,
  Str  :$skip,
  Str  :$only,
  Bool :$log        = False,
  Bool :$completion = False, 
  Bool :$clean      = False, 
  Bool :$help       = False, 
  Bool :$init       = False, 
  Bool :$list       = False, 
  Bool :$remove     = False, 
  Bool :$cat        = False, 
  Bool :$lines      = False, 
  Bool :$edit       = False, 
  Bool :$env-set    = False, 
  Bool :$env-edit   = False, 
  Bool :$env-list   = False, 
  Bool :$tags       = False,
  Bool :$env-cat    = False, 
  Bool :$dump-task  = False, 
  Str  :$env,
  Str  :$profile = "default"

)

{

  my %profile = read-profile(".tomty",$profile, %( verbose => $verbose ));

  my $all-mode = $all || $a || $only || $skip || $tags || %profile<all> || %profile<only> || %profile<skip>;


  if $color == True {
    %*ENV<SP6_FORMAT_COLOR> = 1
  }

  if $dump-task == True {
    %*ENV<SP6_DUMP_TASK_CODE> = 1
  }

  if $init {

    init("{$*CWD}/.tomty");

    exit(0);

  } elsif($completion) {

    completion-install();

    exit(0);

  } 

  check-if-init("{$*CWD}/.tomty");

  if ($cat && $thing) { # cat test

    test-cat("{$*CWD}/.tomty", $thing, %( lines => $lines ));

  } elsif ($list) { # tests/tags list

    if $tags {
      tags-print("{$*CWD}/.tomty", %( color => $color ))
    } else {
      test-list-print("{$*CWD}/.tomty", %( noheader => $noheader ))
    }

  } elsif ($help) { # help page

    tomty-help();

  } elsif ($clean) { # clean cache

    tomty-clean("{$*CWD}/.tomty");

  } elsif ($thing && $remove) { # remove test

    test-remove("{$*CWD}/.tomty",$thing );

  } elsif ($edit && $thing) { # edir test

    test-edit("{$*CWD}/.tomty",$thing );

  } elsif ($env-edit && $thing) { # edit env

    environment-edit("{$*CWD}/.tomty/env",$thing );

  } elsif ($env-cat && $thing) { # cat env

    environment-cat("{$*CWD}/.tomty/env", $thing, %( lines => $lines ));

  } elsif ($env-list) { # env list

    environment-list("{$*CWD}/.tomty/env");

  } elsif ($env-set && $thing) { # activate env

    environment-set("{$*CWD}/.tomty/env", $thing);

  } elsif ($env-set && !$thing) { # print activated env

    environment-show("{$*CWD}/.tomty/env");

  } elsif ($log && $thing ) {

    test-log($thing, %(color => $color));

  } elsif ($thing ) {

    test-run(
        "{$*CWD}/.tomty", $thing, %( 
          env => $env, 
          verbose => $verbose,
          color => $color,
        ) 
    );

  } elsif ($all-mode) {

    test-run-all(
      "{$*CWD}/.tomty", %( 
        verbose-mode => $verbose,
        color => $color,   
        skip  => $skip || %profile<skip>, 
        only  => $only || %profile<only>,
        show-failed => $show-failed,
        env => $env || %profile<env>,
        tags => $tags,
      )
    );

  } else {

    test-list-print("{$*CWD}/.tomty", %( noheader => $noheader ))

  }

}


